{"version":3,"file":"index.js","sources":["../../src/store/filter/createFilterQuery.js","../../src/store/array-object/ObjectEntryStore.js","../../src/store/array-object/ArrayObjectStore.js","../../src/store/array-object/CrudArrayObjectStore.js","../../src/store/world-setting/WorldSettingArrayStore.js","../../src/store/storeCallback.js"],"sourcesContent":["import { writable }        from 'svelte/store';\r\n\r\nimport { normalizeString } from '@typhonjs-svelte/lib/util';\r\n\r\n/**\r\n * Creates a filter function to compare objects by a give property key against a regex test. The returned function\r\n * is also a writable Svelte store that builds a regex from the stores value.\r\n *\r\n * This filter function can be used w/ DynArrayReducer and bound as a store to input elements.\r\n *\r\n * @param {string}   property - Property key to compare.\r\n *\r\n * @param {object}   [opts] - Optional parameters.\r\n *\r\n * @param {boolean}  [opts.caseSensitive=false] - When true regex test is case-sensitive.\r\n *\r\n * @returns {(data: object) => boolean} The query string filter.\r\n */\r\nexport function createFilterQuery(property, { caseSensitive = false } = {})\r\n{\r\n   let keyword = '';\r\n   let regex;\r\n   const storeKeyword = writable(keyword);\r\n\r\n   /**\r\n    * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\r\n    * created from the search input element.\r\n    *\r\n    * @param {object} data - Data object to test against regex.\r\n    *\r\n    * @returns {boolean} AnimationStore filter state.\r\n    */\r\n   function filterQuery(data)\r\n   {\r\n      return keyword === '' || !regex ? true : regex.test(normalizeString(data?.[property]));\r\n   }\r\n\r\n   /**\r\n    * Create a custom store that changes when the search keyword changes.\r\n    *\r\n    * @param {(string) => void} handler - A callback function that accepts strings.\r\n    *\r\n    * @returns {import('svelte/store').Unsubscriber}\r\n    */\r\n   filterQuery.subscribe = (handler) =>\r\n   {\r\n      return storeKeyword.subscribe(handler);\r\n   };\r\n\r\n   /**\r\n    * Set\r\n    *\r\n    * @param {string}   value - A new value for the keyword / regex test.\r\n    */\r\n   filterQuery.set = (value) =>\r\n   {\r\n      if (typeof value === 'string')\r\n      {\r\n         keyword = normalizeString(value);\r\n         regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\r\n         storeKeyword.set(keyword);\r\n      }\r\n   };\r\n\r\n   return filterQuery;\r\n}\r\n","import {\r\n   isObject,\r\n   uuidv4 }    from '@typhonjs-fvtt/svelte/util';\r\n\r\n/**\r\n * Provides a base implementation for store entries in {@link ArrayObjectStore}.\r\n *\r\n * In particular providing the required getting / accessor for the 'id' property.\r\n */\r\nexport class ObjectEntryStore\r\n{\r\n   /**\r\n    * @type {object}\r\n    */\r\n   #data;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(object): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @param {object}   data -\r\n    */\r\n   constructor(data = {})\r\n   {\r\n      if (!isObject(data)) { throw new TypeError(`'data' is not an object.`); }\r\n\r\n      this.#data = data;\r\n\r\n      // If an id is missing then add it.\r\n      if (typeof data.id !== 'string') { this.#data.id = uuidv4(); }\r\n\r\n      if (!uuidv4.isValid(data.id)) { throw new Error(`'data.id' (${data.id}) is not a valid UUIDv4 string.`)}\r\n   }\r\n\r\n   /**\r\n    * Invoked by ArrayObjectStore to provide custom duplication. Override this static method in your entry store.\r\n    *\r\n    * @param {object}   data - A copy of local data w/ new ID already set.\r\n    *\r\n    * @param {ArrayObjectStore} arrayStore - The source ArrayObjectStore instance.\r\n    */\r\n   static duplicate(data, arrayStore) {}\r\n\r\n   /**\r\n    * @returns {object}\r\n    * @protected\r\n    */\r\n   get _data() { return this.#data; }\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get id() { return this.#data.id; }\r\n\r\n   toJSON()\r\n   {\r\n      return this.#data;\r\n   }\r\n\r\n   /**\r\n    * @param {function(object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);  // add handler to the array of subscribers\r\n\r\n      handler(this.#data);                // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * @protected\r\n    */\r\n   _updateSubscribers()\r\n   {\r\n      const subscriptions = this.#subscriptions;\r\n\r\n      const data = this.#data;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\r\n   }\r\n}\r\n","import {\r\n   DynArrayReducer,\r\n   isWritableStore,\r\n   subscribeIgnoreFirst }     from '@typhonjs-fvtt/svelte/store';\r\n\r\nimport {\r\n   debounce,\r\n   isObject,\r\n   klona,\r\n   uuidv4 }                   from '@typhonjs-fvtt/svelte/util';\r\n\r\nimport { ObjectEntryStore }   from './ObjectEntryStore.js';\r\n\r\n/**\r\n * @typedef {typeof import('svelte/store').Writable & { get id: string }} BaseEntryStore\r\n */\r\n\r\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nexport class ArrayObjectStore\r\n{\r\n   /** @type {T[]} */\r\n   #data = [];\r\n\r\n   /**\r\n    * @type {Map<string, { store: T, unsubscribe: Function}>}\r\n    */\r\n   #dataMap = new Map();\r\n\r\n   /**\r\n    * @type {DynArrayReducer<T>}\r\n    */\r\n   #dataReducer;\r\n\r\n   /**\r\n    * @type {boolean}\r\n    */\r\n   #manualUpdate;\r\n\r\n   #StoreClass;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(T[]): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @type {Function}\r\n    */\r\n   #updateSubscribersBound;\r\n\r\n   /**\r\n    * @returns {ObjectEntryStore}\r\n    */\r\n   static get EntryStore() { return ObjectEntryStore; }\r\n\r\n   /**\r\n    * @param {ArrayObjectStoreParams} params -\r\n    */\r\n   constructor({ StoreClass, defaultData = [], childDebounce = 250, dataReducer = false, manualUpdate = false } = {})\r\n   {\r\n      if (!Number.isInteger(childDebounce) || childDebounce < 0 || childDebounce > 1000)\r\n      {\r\n         throw new TypeError(`'childDebounce' must be an integer between and including 0 - 1000.`);\r\n      }\r\n\r\n      if (typeof manualUpdate !== 'boolean') { throw new TypeError(`'manualUpdate' is not a boolean.`); }\r\n\r\n      if (!isWritableStore(StoreClass.prototype))\r\n      {\r\n         throw new TypeError(`'StoreClass' is not a writable store constructor.`);\r\n      }\r\n\r\n      let hasIDGetter = false\r\n\r\n      // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n      for (let o = StoreClass.prototype; o; o = Object.getPrototypeOf(o))\r\n      {\r\n         const descriptor = Object.getOwnPropertyDescriptor(o, 'id');\r\n         if (descriptor !== void 0 && descriptor.get !== void 0)\r\n         {\r\n            hasIDGetter = true;\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!hasIDGetter)\r\n      {\r\n         throw new TypeError(`'StoreClass' does not have a getter accessor for 'id' property.`);\r\n      }\r\n\r\n      if (!Array.isArray(defaultData)) { throw new TypeError(`'defaultData' is not an array.`); }\r\n\r\n      this.#manualUpdate = manualUpdate;\r\n\r\n      this.#StoreClass = StoreClass;\r\n\r\n      if (dataReducer) { this.#dataReducer = new DynArrayReducer({ data: this.#data }); }\r\n\r\n      // Prepare a debounced callback that is used for all child store entry subscriptions.\r\n      this.#updateSubscribersBound = childDebounce === 0 ? this.updateSubscribers.bind(this) :\r\n       debounce((data) => this.updateSubscribers(data), childDebounce);\r\n   }\r\n\r\n   /**\r\n    * Provide an iterator for public access to entry stores.\r\n    *\r\n    * @returns {Generator<T | void>}\r\n    * @yields {T|void}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#data.length === 0) { return; }\r\n\r\n      for (const entryStore of this.#data) { yield entryStore; }\r\n   }\r\n\r\n   /**\r\n    * @returns {T[]}\r\n    * @protected\r\n    */\r\n   get _data() { return this.#data; }\r\n\r\n   /**\r\n    * @returns {DynArrayReducer<T>}\r\n    */\r\n   get dataReducer()\r\n   {\r\n      if (!this.#dataReducer)\r\n      {\r\n         throw new Error(\r\n          `'dataReducer' is not initialized; did you forget to specify 'dataReducer' as true in constructor options?`);\r\n      }\r\n\r\n      return this.#dataReducer;\r\n   }\r\n\r\n   /**\r\n    * @returns {number}\r\n    */\r\n   get length() { return this.#data.length; }\r\n\r\n   /**\r\n    * Removes all child store entries.\r\n    */\r\n   clear()\r\n   {\r\n      for (const storeEntryData of this.#dataMap.values()) { storeEntryData.unsubscribe(); }\r\n\r\n      this.#dataMap.clear();\r\n      this.#data.length = 0;\r\n\r\n      this.updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Creates a new store from given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T}\r\n    */\r\n   create(entryData = {})\r\n   {\r\n      if (!isObject(entryData)) { throw new TypeError(`'entryData' is not an object.`); }\r\n\r\n      if (typeof entryData.id !== 'string') { entryData.id = uuidv4(); }\r\n\r\n      if (this.#data.findIndex((entry) => entry.id === entryData.id) >= 0)\r\n      {\r\n         throw new Error(`'entryData.id' (${entryData.id}) already in this ArrayObjectStore instance.`)\r\n      }\r\n\r\n      const store = this.#createStore(entryData);\r\n\r\n      this.updateSubscribers();\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Add a new store entry from the given data.\r\n    *\r\n    * @param {object}   entryData\r\n    *\r\n    * @returns {T} New store entry instance.\r\n    */\r\n   #createStore(entryData)\r\n   {\r\n      const store = new this.#StoreClass(entryData, this);\r\n\r\n      if (!uuidv4.isValid(store.id))\r\n      {\r\n         throw new Error(`'store.id' (${store.id}) is not a UUIDv4 compliant string.`);\r\n      }\r\n\r\n      const unsubscribe = subscribeIgnoreFirst(store, this.#updateSubscribersBound);\r\n\r\n      this.#data.push(store);\r\n      this.#dataMap.set(entryData.id, { store, unsubscribe });\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Deletes a given entry store by ID from this world setting array store instance.\r\n    *\r\n    * @param {string}  id - ID of entry to delete.\r\n    *\r\n    * @returns {boolean} Delete operation successful.\r\n    */\r\n   delete(id)\r\n   {\r\n      const result = this.#deleteStore(id);\r\n\r\n      if (result) { this.updateSubscribers(); }\r\n\r\n      return result;\r\n   }\r\n\r\n   #deleteStore(id)\r\n   {\r\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\r\n\r\n      const storeEntryData = this.#dataMap.get(id);\r\n      if (storeEntryData)\r\n      {\r\n         storeEntryData.unsubscribe();\r\n\r\n         this.#dataMap.delete(id);\r\n\r\n         const index = this.#data.findIndex((entry) => entry.id === id);\r\n         if (index >= 0) { this.#data.splice(index, 1); }\r\n\r\n         return true;\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Duplicates an entry store by the given ID.\r\n    *\r\n    * @param {string}   id - UUIDv4 string.\r\n    *\r\n    * @returns {*} Instance of StoreClass.\r\n    */\r\n   duplicate(id)\r\n   {\r\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\r\n\r\n      const storeEntryData = this.#dataMap.get(id);\r\n\r\n      if (storeEntryData)\r\n      {\r\n         const data = klona(storeEntryData.store.toJSON());\r\n         data.id = uuidv4();\r\n\r\n         // Allow StoreClass to statically perform any specialized duplication.\r\n         this.#StoreClass?.duplicate?.(data, this);\r\n\r\n         return this.create(data);\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Find an entry in the backing child store array.\r\n    *\r\n    * @param {function(T): T|void}  predicate - A predicate function\r\n    *\r\n    * @returns {T|void} Found entry in array or undefined.\r\n    */\r\n   find(predicate)\r\n   {\r\n      return this.#data.find(predicate);\r\n   }\r\n\r\n   /**\r\n    * Finds an entry store instance by 'id' / UUIDv4.\r\n    *\r\n    * @param {string}   id - A UUIDv4 string.\r\n    *\r\n    * @returns {T|void} Entry store instance.\r\n    */\r\n   get(id)\r\n   {\r\n      const storeEntryData = this.#dataMap.get(id);\r\n      return storeEntryData ? storeEntryData.store : void 0;\r\n   }\r\n\r\n   /**\r\n    * Sets the children store data by 'id', adds new entry store instances, or removes entries that are no longer in the\r\n    * update list.\r\n    *\r\n    * @param {T[]}   updateList\r\n    */\r\n   set(updateList)\r\n   {\r\n      if (!Array.isArray(updateList))\r\n      {\r\n         console.warn(`ArrayObjectStore.set warning: aborting set operation as 'updateList' is not an array.`);\r\n         return;\r\n      }\r\n\r\n      const data = this.#data;\r\n      const dataMap = this.#dataMap;\r\n\r\n      // Create a set of all current entry IDs.\r\n      const removeIDSet = new Set(dataMap.keys());\r\n\r\n      let rebuildIndex = false;\r\n\r\n      for (let updateIndex = 0; updateIndex < updateList.length; updateIndex++)\r\n      {\r\n         const updateData = updateList[updateIndex];\r\n\r\n         const id = updateData.id;\r\n\r\n         if (typeof id !== 'string') { throw new Error(`'updateData.id' is not a string.`)}\r\n\r\n         const localIndex = data.findIndex((entry) => entry.id === id);\r\n\r\n         if (localIndex >= 0)\r\n         {\r\n            const localEntry = data[localIndex];\r\n\r\n            // Update the entry data.\r\n            localEntry.set(updateData);\r\n\r\n            // Must move to correct position\r\n            if (localIndex !== updateIndex)\r\n            {\r\n               // Remove from current location.\r\n               data.splice(localIndex, 1);\r\n\r\n               if (updateIndex < data.length)\r\n               {\r\n                  // Insert at new location.\r\n                  data.splice(updateIndex, 0, localEntry);\r\n               }\r\n               else\r\n               {\r\n                  // Local data length is less than update data index; rebuild index.\r\n                  rebuildIndex = true;\r\n               }\r\n            }\r\n\r\n            // Delete from removeIDSet as entry is still in local data.\r\n            removeIDSet.delete(id);\r\n         }\r\n         else\r\n         {\r\n            this.#createStore(updateData);\r\n         }\r\n      }\r\n\r\n      if (rebuildIndex)\r\n      {\r\n         // Must invoke unsubscribe for all child stores.\r\n         for (const storeEntryData of dataMap.values()) { storeEntryData.unsubscribe(); }\r\n\r\n         data.length = 0;\r\n         dataMap.clear();\r\n\r\n         for (const updateData of updateList) { this.#createStore(updateData); }\r\n      }\r\n      else\r\n      {\r\n         // Remove entries that are no longer in data.\r\n         for (const id of removeIDSet) { this.#deleteStore(id); }\r\n      }\r\n\r\n      this.updateSubscribers();\r\n   }\r\n\r\n   toJSON()\r\n   {\r\n      return this.#data;\r\n   }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @param {function(T[]): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this.#data);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers.\r\n    *\r\n    * @param {ArrayObjectUpdateData}  [update] -\r\n    */\r\n   updateSubscribers(update)\r\n   {\r\n      const updateGate = typeof update === 'boolean' ? update : !this.#manualUpdate;\r\n\r\n      if (updateGate)\r\n      {\r\n         const subscriptions = this.#subscriptions;\r\n\r\n         const data = this.#data;\r\n\r\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\r\n      }\r\n\r\n      // This will update the filtered data and `dataReducer` store and forces an update to subscribers.\r\n      if (this.#dataReducer) { this.#dataReducer.index.update(true); }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} ArrayObjectStoreParams\r\n *\r\n * @property {BaseEntryStore} StoreClass - The entry store class that is instantiated.\r\n *\r\n * @property {object[]}       [defaultData=[]] - An array of default data objects.\r\n *\r\n * @property {number}         [childDebounce=250] - An integer between and including 0 - 1000; a debounce time in\r\n *                            milliseconds for child store subscriptions to invoke\r\n *                            {@link ArrayObjectStore.updateSubscribers} notifying subscribers to this array\r\n *                            store.\r\n *\r\n * @property {boolean}        [dataReducer=false] - When true a DynArrayReducer will be instantiated wrapping store\r\n *                                                  data and accessible from {@link ArrayObjectStore.dataReducer}.\r\n *\r\n * @property {boolean}        [manualUpdate=false] - When true {@link ArrayObjectStore.updateSubscribers} must be\r\n *                            invoked with a single boolean parameter for subscribers to be updated.\r\n */\r\n\r\n/**\r\n * @typedef {boolean|object|undefined} ArrayObjectUpdateData\r\n */\r\n","import {\r\n   isObject,\r\n   uuidv4 }                   from '@typhonjs-fvtt/svelte/util';\r\n\r\nimport { ArrayObjectStore }   from './ArrayObjectStore.js';\r\n\r\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nexport class CrudArrayObjectStore extends ArrayObjectStore\r\n{\r\n   /** @type {CrudDispatch} */\r\n   #crudDispatch;\r\n\r\n   /** @type {object} */\r\n   #extraData;\r\n\r\n   /**\r\n    * @param {object}                  [opts] - Optional parameters.\r\n    *\r\n    * @param {CrudDispatch}            [opts.crudDispatch] -\r\n    *\r\n    * @param {object}                  [opts.extraData] -\r\n    *\r\n    * @param {ArrayObjectStoreParams}  [opts.rest] - Rest of ArrayObjectStore parameters.\r\n    */\r\n   constructor({ crudDispatch, extraData, ...rest })\r\n   {\r\n      // 'manualUpdate' is set to true if 'crudUpdate' is defined, but can be overridden by `...rest`.\r\n      super({\r\n         manualUpdate: typeof crudDispatch === 'function',\r\n         ...rest,\r\n      });\r\n\r\n      if (crudDispatch !== void 0 && typeof crudDispatch !== 'function')\r\n      {\r\n         throw new TypeError(`'crudDispatch' is not a function.`);\r\n      }\r\n\r\n      if (extraData !== void 0 && !isObject(extraData))\r\n      {\r\n         throw new TypeError(`'extraData' is not an object.`);\r\n      }\r\n\r\n      this.#crudDispatch = crudDispatch;\r\n      this.#extraData = extraData ?? {};\r\n   }\r\n\r\n   /**\r\n    * Removes all child store entries.\r\n    */\r\n   clear()\r\n   {\r\n      super.clear();\r\n\r\n      if (this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({ action: 'clear', ...this.#extraData });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Creates a new store from given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T}\r\n    */\r\n   create(entryData = {})\r\n   {\r\n      const store = super.create(entryData);\r\n\r\n      if (store && this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({\r\n            action: 'create',\r\n            ...this.#extraData,\r\n            id: store.id,\r\n            data: store.toJSON()\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Deletes a given entry store by ID from this world setting array store instance.\r\n    *\r\n    * @param {string}  id - ID of entry to delete.\r\n    *\r\n    * @returns {boolean} Delete operation successful.\r\n    */\r\n   delete(id)\r\n   {\r\n      const result = super.delete(id);\r\n\r\n      if (result && this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({ action: 'delete', ...this.#extraData, id });\r\n      }\r\n\r\n      return result;\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers, but provides special handling when WorldSettingArrayStore has an `crudDispatch` function\r\n    * attached. When the update is an object with a valid UUIDv4 string as the id property the `crudDispatch`\r\n    * function is invoked with  along with the data payload\r\n    *\r\n    * @param {ArrayObjectUpdateData} [update] -\r\n    */\r\n   updateSubscribers(update)\r\n   {\r\n      if (this.#crudDispatch && isObject(update) && uuidv4.isValid(update.id))\r\n      {\r\n         const result = this.#crudDispatch({\r\n            action: 'update',\r\n            ...this.#extraData,\r\n            id: update.id,\r\n            data: update  // TODO: Consider using klona to clone data.\r\n         });\r\n\r\n         // If the crudDispatch function returns a boolean then invoke 'ArrayObjectStore.updateSubscribers' with it.\r\n         super.updateSubscribers(typeof result === 'boolean' ? result : update);\r\n      }\r\n      else\r\n      {\r\n         super.updateSubscribers(update);\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {ArrayObjectStoreParams} CrudArrayObjectStoreParams\r\n *\r\n * @property {CrudDispatch}   [crudDispatch] -\r\n *\r\n * @property {object}         [extraData] -\r\n */\r\n\r\n/**\r\n * @typedef {({ action: string, id?: string, data?: object }) => boolean} CrudDispatch\r\n *\r\n * A function that accepts an object w/ 'action', 'moduleId', 'key' properties and optional 'id' / UUIDv4 string and\r\n * 'data' property.\r\n */\r\n","import { TJSGameSettings }       from '@typhonjs-fvtt/svelte/store';\r\n\r\nimport { CrudArrayObjectStore }  from '../array-object';\r\n\r\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nexport class WorldSettingArrayStore extends CrudArrayObjectStore\r\n{\r\n   /** @type {string} */\r\n   #key;\r\n\r\n   /** @type {string} */\r\n   #moduleId;\r\n\r\n   /**\r\n    *\r\n    * @param {object}            [opts] - Optional parameters.\r\n    *\r\n    * @param {TJSGameSettings}   [opts.gameSettings] - An instance of TJSGameSettings.\r\n    *\r\n    * @param {string}            [opts.moduleId] - Game setting 'moduleId' field.\r\n    *\r\n    * @param {string}            [opts.key] - Game setting 'key' field.\r\n    *\r\n    * @param {CrudArrayObjectStoreParams} [opts.rest] - Rest of CrudArrayObjectStore parameters.\r\n    */\r\n   constructor({ gameSettings, moduleId, key, ...rest })\r\n   {\r\n      super({\r\n         ...rest,\r\n         extraData: { moduleId, key }\r\n      });\r\n\r\n      if (gameSettings !== void 0 && !(gameSettings instanceof TJSGameSettings))\r\n      {\r\n         throw new TypeError(`'gameSettings' is not an instance of TJSGameSettings.`);\r\n      }\r\n\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n      if (typeof moduleId !== 'string') { throw new TypeError(`'moduleId' is not a string.`); }\r\n\r\n      this.#moduleId = moduleId;\r\n      this.#key = key;\r\n\r\n      if (gameSettings)\r\n      {\r\n         gameSettings.register({\r\n            moduleId,\r\n            key,\r\n            store: this,\r\n            options: {\r\n               scope: 'world',\r\n               config: false,\r\n               default: Array.isArray(rest.defaultData) ? rest.defaultData : [],\r\n               type: Array\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get key() { return this.#key; }\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get moduleId() { return this.#moduleId; }\r\n}\r\n","import { isWritableStore } from '@typhonjs-svelte/lib/store';\r\n\r\n/**\r\n * Wraps a writable stores set method invoking a callback after the store is set. This allows hard coupled parent /\r\n * child relationships between stores to update directly without having to subscribe to the child store. This is a\r\n * particular powerful pattern when the `setCallback` is a debounced function that syncs a parent store and / or\r\n * serializes data.\r\n *\r\n * Note: Do consider carefully if this is an optimum solution; this is a quick implementation helper, but a better\r\n * solution is properly managing store relationships through subscription.\r\n *\r\n * @template T\r\n *\r\n * @param {import('svelte/store').Writable<T>} store - A store to wrap.\r\n *\r\n * @param {(store?: import('svelte/store').Writable<T>, value?: T) => void} setCallback - A callback to invoke after\r\n *                                                                                        store set.\r\n *\r\n * @returns {import('svelte/store').Writable<T>} Wrapped store.\r\n */\r\nexport function storeCallback(store, setCallback)\r\n{\r\n   if (!isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\r\n   if (typeof setCallback !== 'function') { throw new TypeError(`'setCallback' is not a function.`); }\r\n\r\n   /** @type {import('svelte/store').Writable<T>} */\r\n   return {\r\n      set: (value) => {\r\n         store.set(value);\r\n         setCallback(store, value);\r\n      },\r\n\r\n      subscribe: store.subscribe,\r\n\r\n      update: typeof store.update === 'function' ? store.update : void 0\r\n   };\r\n}\r\n"],"names":["isWritableStore"],"mappings":"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"}